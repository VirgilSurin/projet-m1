#+title: Plan

* DONE Introduction
CLOSED: [2024-01-03 mer 20:02]
Explications du projet et de son objectif
(faire un rappel de la BIR)
- Objectif principal
- motivations
- plans du rapport
* Les graphes
Chapitre expliquant les notions que nous allons utiliser
** DONE Notions de bases
CLOSED: [2024-01-03 mer 20:02]
** DONE Les cliques
CLOSED: [2024-01-03 mer 20:02]
* DONE Le probleme d'enumeration des cliques maximales dans un graphe simple
CLOSED: [2024-01-03 mer 20:03]
- définition du problème
- complexité

* TODO Algorithmes
- petit texte pour expliquer le but et l'idée générale (input/output)
- pseudo-code
- en fonction, pour étapes complexe revenir en francais dessus apres le pseudo code (avec illustration peut etre)
- les complexités

peut etre parler de facon generique du pivot avant
** CLIQUES
** BK

* Tests de performances
** Methodologie
** Tests sets
** Résultats

* Conclusion

* Bibliographie

* NOTES
** Intro
- Attention pleins de typos !
- retirer rapport de projet (peut etre en tout petit genre "travaille fait dans le cadre de...") du titre
- ajouter citation dans l'intro !
- Rendre plus concret le 2eme paragraphe --> ajouter des applications concrètes (ex: réseaux sociaux)
  - si beaucoup à dire là dessus on peut rajouter une section applications entre 2. et 3. en plus de l'exemple de l'intro
** graphes
- Majuscule pour Figures (tout ce qui est numéroté)
- 2.1 : par 2 --> ramener non-oriente à cet endroit là pour plus de cohérence
- C'est pas très breau quand un phrase commence par une notation
  - Tout pourrait être lu oralement !
  - Se relire à voix haute !
- F = E(W) car plus joli
- changer E({1, 2, 3})
- Parler du  sous-graphe induit aka sg induit on ne peut pas se passer d'une arete pour introduire et après parler de W et F. Mettre "dans la suite, sauf mention contraire on considerera qu;on ne parle que de sous grpahe induit"
- 2.2 -> mettre le Soit avant def clique pour éviter probleme :
- équation -> def -> faut mettre un point à la fin car c'est une phrase ET numéroté l'eq avec \begin equation (et mettre un label pour ref plus tard)
- clique de plus grande taille -> de taille maximum
-
*** 3.1
- classe de complexité --> NP-#
- Trouver la valuer de la clique Max est déjà NP-Difficile
- Dire que le probleme de decision de clique est NP-C
  - prblm de trouver une clique maximum est : listing all maximal cliques may require exp time cuz there are graphs with a number exp of maximal clique (complete graph)
  - BK est bien car : il a un temps poly par clique --> A DIRE --> Mais on ne ctrl pas le # de cliques donc les enumerer tous rend l'enumeration exponetielle !
  - Ce qu'on peut esperer c'est que trouver la prochaine clique se fasse rapidement -> OUI -> BK !
*** 4: algo
1) donner l'intiution initiale de l'algo (comment on va faire en gros) -> on a une clique courante --> on essaie de l'étendre pour la rendre maximale
2) pseudo code
3) Explication du code après le pseudo code

- textrm dans le mode Math pour les lettres
- un ~ pour faire un espace insécable pour mettre un espace entre Tomita et [2] mais pour éviter que LateX separe Tomita de sa référence idem pour les figures
- expliquer quels graphes ont tels complexite etc.. -> epxliquer d'ou vient la complexite
- peut donner un lien github pour le code

* Graphes
prendre les petits graphes n = 10 c'est déjà pas mal (house of graphs)
/!\ temps de calculs pour enumerer toutes les cliques + temps de calcul par cliques

* TOUT FAIRE EN PYTHON POUR PAQUES + RESULTATS
